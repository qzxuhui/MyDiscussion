function tests = TestElementStiffnessMatrixForTet
tests = functiontests(localfunctions);
end

function testCase1(test_case)
% this is the example 11.1 in book [1]
% Reference:
% [1] A first course in the finite element method six edition@ Logan
E = 30e6;
nu = 0.3;
coordinate = [; ...
    1, 1, 2; ...
    0, 0, 0; ...
    0, 2, 0; ...
    2, 1, 0];
x = coordinate(:, 1);
y = coordinate(:, 2);
z = coordinate(:, 3);
K = elementStiffnessMatrixForTet(x, y, z, E, nu);
expect_K = [; ...
    3.8462, 0, 0, -0.9615, 0, -1.9231, -0.9615, 0, -1.9231, -1.9231, 0, 3.8462; ...
    0, 3.8462, 0, 0, -0.9615, -3.8462, 0, -0.9615, 3.8462, 0, -1.9231, 0; ...
    0, 0, 13.4615, -2.8846, -5.7692, -3.3654, -2.8846, 5.7692, -3.3654, 5.7692, 0, -6.7308; ...
    -0.9615, 0, -2.8846, 7.4519, 4.8077, 1.2019, -0.2404, -0.9615, 1.2019, -6.2500, -3.8462, 0.4808; ...
    0, -0.9615, -5.7692, 4.8077, 14.6635, 2.4038, 0.9615, -12.2596, 0.4808, -5.7692, -1.4423, 2.8846; ...
    -1.9231, -3.8462, -3.3654, 1.2019, 2.4038, 5.6490, 1.2019, -0.4808, -2.0433, -0.4808, 1.9231, -0.2404; ...
    -0.9615, 0, -2.8846, -0.2404, 0.9615, 1.2019, 7.4519, -4.8077, 1.2019, -6.2500, 3.8462, 0.4808; ...
    0, -0.9615, 5.7692, -0.9615, -12.2596, -0.4808, -4.8077, 14.6635, -2.4038, 5.7692, -1.4423, -2.8846; ...
    -1.9231, 3.8462, -3.3654, 1.2019, 0.4808, -2.0433, 1.2019, -2.4038, 5.6490, -0.4808, -1.9231, -0.2404; ...
    -1.9231, 0, 5.7692, -6.2500, -5.7692, -0.4808, -6.2500, 5.7692, -0.4808, 14.4231, 0, -4.8077; ...
    0, -1.9231, 0, -3.8462, -1.4423, 1.9231, 3.8462, -1.4423, -1.9231, 0, 4.8077, 0; ...
    3.8462, 0, -6.7308, 0.4808, 2.8846, -0.2404, 0.4808, -2.8846, -0.2404, -4.8077, 0, 7.2115; ...
    ]*1e6;
for i=1:1:12
    for j=1:1:12
        relative_error=abs(K(i,j)-expect_K(i,j))/abs(K(i,j));
        if relative_error>1e-4
            error('calculated element matrix not equal to expect matrix.');
        end
    end
end
end

